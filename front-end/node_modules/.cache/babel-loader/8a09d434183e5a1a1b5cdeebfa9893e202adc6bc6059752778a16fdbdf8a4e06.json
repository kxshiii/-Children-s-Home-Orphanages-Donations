{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../services/api\"; // adjust if path is different\n\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, thunkAPI) => {\n  try {\n    const res = await axios.post(\"/auth/login\", credentials);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (data, thunkAPI) => {\n  try {\n    const res = await axios.post(\"/auth/register\", data);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","credentials","thunkAPI","res","post","data","err","rejectWithValue","response","registerUser","authSlice","name","initialState","user","loading","error","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/carren-shihemi/Phase-5-work/-Children-s-Home-Orphanages-Donations/front-end/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../services/api\"; // adjust if path is different\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post(\"/auth/login\", credentials);\n      return res.data;\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (data, thunkAPI) => {\n    try {\n      const res = await axios.post(\"/auth/register\", data);\n      return res.data;\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;;AAExC,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,gBAAgB,EAChB,OAAOG,WAAW,EAAEC,QAAQ,KAAK;EAC/B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,aAAa,EAAEH,WAAW,CAAC;IACxD,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOJ,QAAQ,CAACK,eAAe,CAACD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAAC;EACpD;AACF,CACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGX,gBAAgB,CAC1C,mBAAmB,EACnB,OAAOO,IAAI,EAAEH,QAAQ,KAAK;EACxB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IACpD,OAAOF,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOJ,QAAQ,CAACK,eAAe,CAACD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAAC;EACpD;AACF,CACF,CAAC;AAED,MAAMK,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,SAAS,CAACsB,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CAACrB,SAAS,CAACuB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAACrB,SAAS,CAAC0B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAACZ,YAAY,CAACa,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CAACZ,YAAY,CAACc,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAACZ,YAAY,CAACiB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAO,CAAC,GAAGP,SAAS,CAACiB,OAAO;AAC3C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}